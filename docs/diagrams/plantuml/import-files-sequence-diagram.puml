@startuml import-files-sequence-diagram
!include style.puml

box Actor
actor User as User USER_COLOR
end box

box View VIEW_BACKGROUND_COLOR
participant ":DocumentListViewController" as DocumentListViewController VIEW_COLOR
participant ":UIDocumentPickerViewController" as UIDocumentPickerViewController VIEW_COLOR
end box

box Storage FIREBASE_BACKGROUND_COLOR
participant ":AnnotatoPdfStorageManager" as AnnotatoPdfStorageManager FIREBASE_COLOR
participant "storageService:AnnotatoStorageService" as AnnotatoStorageService FIREBASE_COLOR
end box

box OTHER_BACKGROUND_COLOR
participant ":DocumentsAPI" as DocumentsAPI OTHER_COLOR
end box

box Backend BACKEND_BACKGROUND_COLOR
participant "<<class>>\n:DocumentsController" as DocumentsController BACKEND_COLOR
participant "<<class>>\n:DocumentsDataAccess" as DocumentsDataAccess BACKEND_COLOR
end box

User -> DocumentListViewController : didTapImportFileButton()
activate DocumentListViewController

DocumentListViewController -> DocumentListViewController : goToImportingFiles()
activate DocumentListViewController

create UIDocumentPickerViewController
DocumentListViewController -> UIDocumentPickerViewController
activate UIDocumentPickerViewController

UIDocumentPickerViewController --> DocumentListViewController
deactivate UIDocumentPickerViewController

UIDocumentPickerViewController -> DocumentListViewController : documentPicker(controller, baseFileUrls)
activate DocumentListViewController

create AnnotatoPdfStorageManager
DocumentListViewController -> AnnotatoPdfStorageManager
activate AnnotatoPdfStorageManager

create AnnotatoStorageService
AnnotatoPdfStorageManager -> AnnotatoStorageService : FirebaseStorage()
activate AnnotatoStorageService

note over AnnotatoStorageService: We used firebase as our\nstorage service. However, our \nAnnotatoStorageService adapter \nallows us to swap it out with\nanother storage service easily.

AnnotatoStorageService --> AnnotatoPdfStorageManager
deactivate AnnotatoStorageService

AnnotatoPdfStorageManager --> DocumentListViewController
deactivate AnnotatoPdfStorageManager

DocumentListViewController -> AnnotatoPdfStorageManager : uploadPdf(fileSystemUrl, name)
activate AnnotatoPdfStorageManager

AnnotatoPdfStorageManager -> AnnotatoStorageService : uploadPdf(fileSystemUrl, name, documentId)
activate AnnotatoStorageService

AnnotatoStorageService --> AnnotatoPdfStorageManager : firebase pdf url
deactivate AnnotatoStorageService

AnnotatoPdfStorageManager -> DocumentsAPI : createDocument(document)
activate DocumentsAPI

DocumentsAPI -> DocumentsController : create(request) (using a HTTP POST request)
activate DocumentsController

DocumentsController -> DocumentsDataAccess : create(db, document)
activate DocumentsDataAccess

DocumentsDataAccess --> DocumentsController : document
deactivate DocumentsDataAccess

DocumentsController --> DocumentsAPI : document (as JSON response)
deactivate DocumentsController

DocumentsAPI --> AnnotatoPdfStorageManager : document
deactivate DocumentsAPI

AnnotatoPdfStorageManager --> DocumentListViewController : document
deactivate AnnotatoPdfStorageManager

DocumentListViewController -> DocumentListViewController : goToDocumentEdit(documentId)
activate DocumentListViewController

DocumentListViewController --> DocumentListViewController
deactivate DocumentListViewController

DocumentListViewController --> DocumentListViewController
deactivate DocumentListViewController

DocumentListViewController --> DocumentListViewController
deactivate DocumentListViewController

DocumentListViewController --> DocumentListViewController
deactivate DocumentListViewController

@enduml
